package com.xceder.CTP.api.market;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * \u671f\u6743\u4ea4\u6613\u6210\u672c\u67e5\u8be2<br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("Thostmduserapi") 
public class CThostFtdcQryOptionInstrTradeCostField extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : TThostFtdcBrokerIDType */
	@Array({11}) 
	@Field(0) 
	public Pointer<Byte > BrokerID() {
		return this.io.getPointerField(this, 0);
	}
	/** C type : TThostFtdcInvestorIDType */
	@Array({13}) 
	@Field(1) 
	public Pointer<Byte > InvestorID() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : TThostFtdcInstrumentIDType */
	@Array({31}) 
	@Field(2) 
	public Pointer<Byte > InstrumentID() {
		return this.io.getPointerField(this, 2);
	}
	/** C type : TThostFtdcHedgeFlagType */
	@Field(3) 
	public byte HedgeFlag() {
		return this.io.getByteField(this, 3);
	}
	/** C type : TThostFtdcHedgeFlagType */
	@Field(3) 
	public CThostFtdcQryOptionInstrTradeCostField HedgeFlag(byte HedgeFlag) {
		this.io.setByteField(this, 3, HedgeFlag);
		return this;
	}
	/** C type : TThostFtdcPriceType */
	@Field(4) 
	public double InputPrice() {
		return this.io.getDoubleField(this, 4);
	}
	/** C type : TThostFtdcPriceType */
	@Field(4) 
	public CThostFtdcQryOptionInstrTradeCostField InputPrice(double InputPrice) {
		this.io.setDoubleField(this, 4, InputPrice);
		return this;
	}
	/** C type : TThostFtdcPriceType */
	@Field(5) 
	public double UnderlyingPrice() {
		return this.io.getDoubleField(this, 5);
	}
	/** C type : TThostFtdcPriceType */
	@Field(5) 
	public CThostFtdcQryOptionInstrTradeCostField UnderlyingPrice(double UnderlyingPrice) {
		this.io.setDoubleField(this, 5, UnderlyingPrice);
		return this;
	}
	public CThostFtdcQryOptionInstrTradeCostField() {
		super();
	}
	public CThostFtdcQryOptionInstrTradeCostField(Pointer pointer) {
		super(pointer);
	}
}
